# https://peps.python.org/pep-0517/
[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm>=6.2"]
build-backend = "setuptools.build_meta"

# https://peps.python.org/pep-0621/
[project]
name = "pycudadecon"
description = "Python wrapper for CUDA-accelerated 3D deconvolution"
readme = "README.md"
requires-python = ">=3.7"
license = { text = "MIT" }
keywords = ["deconvolution", "microscopy", "CUDA"]
authors = [{ email = "talley.lambert@gmail.com" }, { name = "Talley Lambert" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: GPU :: NVIDIA CUDA",
  "Framework :: napari",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
]
dynamic = ["version"]
dependencies = [
  "numpy",
  "tifffile",
  "typing_extensions",
  "importlib-metadata;python_version<'3.8'",
]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
test = ["pytest>=6.0", "pytest-cov"]
dev = [
  "black",
  "cruft",
  "flake8-bugbear",
  "flake8-docstrings",
  "flake8-pyprojecttoml",
  "flake8-typing-imports",
  "flake8",
  "ipython",
  "isort",
  "mypy",
  "pdbpp",
  "pre-commit",
  "pydocstyle",
  "pytest-cov",
  "pytest",
  "rich",
]

[project.urls]
Documentation = "https://pycudadecon.readthedocs.io/en/latest/"
Source = "https://github.com/tlambert03/pycudadecon"
Tracker = "https://github.com/tlambert03/pycudadecon/issues"

# same as console_scripts entry point
# [project.scripts]
# spam-cli = "spam:main_cli"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
[project.entry-points."napari.manifest"]
pycudadecon = "pycudadecon:napari.yaml"

# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[tool.setuptools]
zip-safe = false
include-package-data = true
packages = { find = { where = ["src"], exclude = [] } }

[tool.setuptools.package-data]
"*" = ["py.typed", "*.yaml"]

# https://github.com/pypa/setuptools_scm/#pyprojecttoml-usage
[tool.setuptools_scm]

# https://pycqa.github.io/isort/docs/configuration/options.html
[tool.isort]
profile = "black"
src_paths = ["src/pycudadecon", "tests"]

# https://flake8.pycqa.org/en/latest/user/options.html
# https://gitlab.com/durko/flake8-pyprojecttoml
[tool.flake8]
exclude = "docs,.eggs,examples,_version.py"
max-line-length = 88
ignore = "E203"
min-python-version = "3.8.0"
docstring-convention = "all" # use numpy convention, while allowing D417
extend-ignore = """
E203  # whitespace before ':'
D107,D203,D212,D213,D402,D413,D415,D416  # numpy
D100  # missing docstring in public module
D401  # imperative mood
W503  # line break before binary operator
"""
per-file-ignores = ["tests/*:D"]


# http://www.pydocstyle.org/en/stable/usage.html
[tool.pydocstyle]
match_dir = "src/pycudadecon"
convention = "numpy"
add_select = "D402,D415,D417"
ignore = "D100,D213,D401,D413,D107"

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true


# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "@overload",
  "except ImportError",
]

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
  ".github_changelog_generator",
  ".pre-commit-config.yaml",
  "CHANGELOG.md",
  "docs/**/*",
  "examples/**/*",
  "tests/**/*",
  "tox.ini",
]
