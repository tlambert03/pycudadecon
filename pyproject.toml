# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"
[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

# https://peps.python.org/pep-0621/
[project]
name = "pycudadecon"
description = "Python wrapper for CUDA-accelerated 3D deconvolution"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
keywords = ["deconvolution", "microscopy", "CUDA"]
authors = [{ email = "talley.lambert@gmail.com", name = "Talley Lambert" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: GPU :: NVIDIA CUDA",
  "Framework :: napari",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
]
dynamic = ["version"]
dependencies = ["numpy", "tifffile", "typing_extensions"]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
test = ["pytest>=6.0", "pytest-cov"]
dev = ["ipython", "mypy", "pdbpp", "pre-commit", "rich", "ruff"]
docs = [
  "jupyter-book==1.0.2",
  "ghp-import==2.1.0",
  "sphinx-autodoc-typehints==2.2.3",
  "furo==2024.8.6"
]

[project.urls]
Documentation = "https://tlambert03.github.io/pycudadecon/"
Source = "https://github.com/tlambert03/pycudadecon"
Tracker = "https://github.com/tlambert03/pycudadecon/issues"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
[project.entry-points."napari.manifest"]
pycudadecon = "pycudadecon:napari.yaml"


# https://docs.astral.sh/ruff
[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src"]

# https://docs.astral.sh/ruff/rules
[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
  "E",    # style errors
  "W",    # style warnings
  "F",    # flakes
  "D",    # pydocstyle
  "D417", # Missing argument descriptions in Docstrings
  "I",    # isort
  "UP",   # pyupgrade
  "C4",   # flake8-comprehensions
  "B",    # flake8-bugbear
  "A001", # flake8-builtins
  "RUF",  # ruff-specific rules
  "TCH",  # flake8-type-checking
  "TID",  # flake8-tidy-imports
]
ignore = [
  "D401", # First line should be in imperative mood (remove to opt in)
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]

# https://docs.astral.sh/ruff/formatter/
[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = false # default is false


# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
filterwarnings = ["error", "ignore:Unable to find function"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
show_missing = true
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "@overload",
  "except ImportError",
  "\\.\\.\\.",
  "raise NotImplementedError()",
  "pass",
]
[tool.coverage.run]
source = ["pycudadecon"]

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
  ".github_changelog_generator",
  ".pre-commit-config.yaml",
  "CHANGELOG.md",
  "docs/**/*",
  "examples/**/*",
  "tests/**/*",
]

[tool.typos.default]
extend-ignore-identifiers-re = ["(?i)otfs?.*", "(?i)nd2", "(?i)b3Dout", "3Dout"]
